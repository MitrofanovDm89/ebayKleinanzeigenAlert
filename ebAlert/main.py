import sys
import logging
from random import randint
from time import sleep
from sqlalchemy.orm import Session
from ebAlert import create_logger
from ebAlert.crud.base import crud_link, get_session
from ebAlert.crud.post import crud_post
from ebAlert.ebayscrapping import ebayclass
from ebAlert.telegram.telegramclass import telegram

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log = create_logger(__name__)
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

try:
    import click
    from click import BaseCommand
except ImportError:
    log.error("Click should be installed\npip install click")


@click.group()
def cli() -> BaseCommand:
    pass


@cli.command(help="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–±–æ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏ –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Telegram.")
def start():
    """
    –û–±—Ö–æ–¥–∏—Ç –≤—Å–µ —Å—Å—ã–ª–∫–∏ –≤ –ë–î, –ø–∞—Ä—Å–∏—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ Telegram.
    """
    print(">> –ó–∞–ø—É—Å–∫ Ebay Alert...")
    with get_session() as db:
        get_all_post(db=db, telegram_message=True)
    print("<< Ebay Alert –∑–∞–≤–µ—Ä—à–µ–Ω.")


@cli.command(options_metavar="<options>", help="–î–æ–±–∞–≤–∏—Ç—å/–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å/–£–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫–∏ –∏–∑ –ë–î.")
@click.option("-r", "--remove_link", 'remove', metavar="<link id>", help="–£–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫—É –∏–∑ –±–∞–∑—ã.")
@click.option("-c", "--clear", is_flag=True, help="–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –æ–±—ä—è–≤–ª–µ–Ω–∏–π.")
@click.option("-a", "--add_url", 'url', metavar='<URL>', help="–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –≤ –ë–î –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è.")
@click.option("-i", "--init", is_flag=True, help="–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")
@click.option("-s", "--show", is_flag=True, help="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏ –∏ –∏—Ö ID.")
def links(show, remove, clear, url, init):
    """
    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∞–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –ø—Ä–æ—Å–º–æ—Ç—Ä.
    """
    with get_session() as db:
        if show:
            print(">> –°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –≤ –±–∞–∑–µ:")
            links = crud_link.get_all(db)
            if links:
                for link_model in links:
                    print(f"{link_model.id}: {link_model.link}")
            print("<< –ö–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫.")

        elif remove:
            print(">> –£–¥–∞–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏...")
            if crud_link.remove(db=db, id=remove):
                print("<< –°—Å—ã–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∞.")
            else:
                print("<< –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

        elif clear:
            print(">> –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")
            crud_post.clear_database(db=db)
            print("<< –ë–∞–∑–∞ –æ—á–∏—â–µ–Ω–∞.")

        elif url:
            print(">> –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏...")
            if crud_link.get_by_key(key_mapping={"link": url}, db=db):
                print("<< –°—Å—ã–ª–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å—Å—ã–ª–∫–∞ —É–∂–µ –µ—Å—Ç—å

            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ –ë–î
            crud_link.create({"link": url}, db)
            ebay_items = ebayclass.EbayItemFactory(url)
            items_added = crud_post.add_items_to_db(db, ebay_items.item_list)

            print(f"<< –î–æ–±–∞–≤–ª–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {len(items_added)}")
            for item in items_added:
                print(f"  - {item.title}")  # –í—ã–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–π –æ–±—ä—è–≤–ª–µ–Ω–∏–π

        elif init:
            print(">> –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã...")
            get_all_post(db)
            print("<< –ë–∞–∑–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")


def get_all_post(db: Session, telegram_message=False):
    """
    –ü—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –≤—Å–µ–º —Å—Å—ã–ª–∫–∞–º –≤ –±–∞–∑–µ, –ø–æ–ª—É—á–∞–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ Telegram.
    """
    links = crud_link.get_all(db=db)
    if links:
        for link_model in links:
            print(f"üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è: {link_model.link}")
            post_factory = ebayclass.EbayItemFactory(link_model.link)

            # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
            found_items = post_factory.item_list
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {len(found_items)}")

            if found_items:
                for item in found_items:
                    print(f"  - {item.title}")  # –í—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–π

            items = crud_post.add_items_to_db(db=db, items=found_items)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
            if telegram_message and items:
                for item in items:
                    print(f"üì© –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram: {item.title}")
                    log.info(f"üì© –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {item.title} –≤ Telegram")
                    telegram.send_formated_message(item)

            sleep(randint(3, 8))  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º


@cli.command(help="–ó–∞–ø—É—Å—Ç–∏—Ç—å Telegram-–±–æ—Ç–∞.")
def telegram_bot():
    """
    –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∞–º–∏ —á–µ—Ä–µ–∑ Telegram.
    """
    try:
        from ebAlert.telegram.telegram_bot import main as run_telegram_bot
        print("‚úÖ –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")
        run_telegram_bot()
    except ImportError as e:
        log.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Telegram-–±–æ—Ç–∞: {e}")
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Telegram-–±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.")
        sys.exit(1)


if __name__ == "__main__":
    cli(sys.argv[1:])
